<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">
    <!-- See https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
    <!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
    <!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/develop/WordPress-Core/ruleset.xml -->

    <description>Starting Point Rule Set.</description>

    <!-- sniff both PHP and JS -->
    <arg name="extensions" value="php/PHP,js/JS,jsx/JS,ts/JS,tsx/JS"/>

    <!-- Exclude paths -->
    <exclude-pattern>*/dev/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/local-config\.php</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>

    <!-- Show sniff codes in all reports, and progress when running -->
    <arg value="snp"/>

    <!-- Exclude paths -->
    <exclude-pattern>*/dev/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/local-config\.php</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>

    <config name="minimum_supported_wp_version" value="5.2.2" />

    <!-- @see https://github.com/PHPCompatibility/PHPCompatibility#using-a-custom-ruleset -->
    <config name="testVersion" value="7.3-"/>
    <!-- @see https://github.com/PHPCompatibility/PHPCompatibilityWP#how-to-use -->
    <rule ref="PHPCompatibilityWP"/>

    <!-- Turns on the WordPress Standard -->
    <rule ref="WordPress">
        <exclude-pattern>*/js/*</exclude-pattern>
        <exclude name="Generic.Commenting" />
        <exclude name="Generic.PHP.DisallowShortOpenTag.EchoFound" />
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed" />
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" />
        <exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments" />
        <exclude name="PEAR.Functions.FunctionCallSignature.OpeningIndent" />
        <exclude name="Squiz.Commenting" />
        <exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine" />
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid" />
        <exclude name="WordPress.NamingConventions.ValidHookName.UseUnderscores" />
        <exclude name="WordPress.Variables.GlobalVariables.OverrideProhibited" />
    </rule>


    <!-- wp_verify_nonce() handles casting on it's own and does not need extra overhead -->
    <rule ref="WordPress.Security.ValidatedSanitizedInput">
        <properties>
            <property name="customUnslashingSanitizingFunctions" type="array">
                <element value="wp_verify_nonce"/>
            </property>
        </properties>
    </rule>

    <!-- Test against JS XXS https://vip.wordpress.com/documentation/vip-go/vip-code-review/javascript-security-best-practices/ -->
    <rule ref="WordPressVIPMinimum.JS">
        <type>error</type>
    </rule>

    <!-- Translations -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array" value="sample-namespace" />
        </properties>
    </rule>

</ruleset>

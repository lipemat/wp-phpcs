<?xml version="1.0"?>
<ruleset name="LipePlugin" namespace="LipePlugin">
    <description>Lipe Plugin - Rules</description>

    <!-- Sniff both PHP and JS. -->
    <arg name="extensions" value="php/PHP,js/JS,jsx/JS,ts/JS,tsx/JS" />
    <!-- Show sniff codes in all reports, and progress when running. -->
    <arg value="sp" />
    <!-- Show colors in reports -->
    <arg name="colors" />

    <!-- Exclude paths -->
    <exclude-pattern>*/dev/*</exclude-pattern>
    <exclude-pattern>*/dist/*</exclude-pattern>
    <exclude-pattern>*/jest/*</exclude-pattern>
    <exclude-pattern>*/js/tests/*</exclude-pattern>
    <exclude-pattern>*/local-config\.php</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/phpunit/*</exclude-pattern>
    <exclude-pattern>*/wp-unit/*</exclude-pattern>

    <!-- Disallow long array syntax. -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />

    <!-- Enforce PSR1 compatible namespaces. -->
    <rule ref="PSR1.Classes.ClassDeclaration" />

    <!-- @see https://github.com/PHPCompatibility/PHPCompatibilityWP#how-to-use -->
    <rule ref="PHPCompatibilityWP">
        <include-pattern>*\.php$</include-pattern>
    </rule>

    <rule ref="WordPress">
        <exclude-pattern>*/js/*</exclude-pattern>
        <exclude name="Generic.Commenting.DocComment" />
        <exclude name="Generic.Formatting.MultipleStatementAlignment" />
        <exclude name="Generic.WhiteSpace.IncrementDecrementSpacing" />

        <exclude name="PEAR.Functions.FunctionCallSignature" />
        <exclude name="PEAR.NamingConventions.ValidClassName" />

        <exclude name="Squiz.Commenting.FileComment" />
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType" />

        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterFunction" />

        <exclude name="Universal.Arrays.DisallowShortArraySyntax" />

        <exclude name="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned" />
        <exclude name="WordPress.Arrays.MultipleStatementAlignment.LongIndexSpaceBeforeDoubleArrow" />
        <exclude name="WordPress.DB.SlowDBQuery" />
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
    </rule>

    <!-- Allow using dashes and slashes in hook names -->
    <!-- https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#wordpressnamingconventionsvalidhookname-custom-word-delimiters-in-hook-names -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="/-" />
        </properties>
    </rule>

    <rule ref="Universal.Classes.DisallowFinalClass">
        <type>error</type>
    </rule>

    <rule ref="Lipe.Config" />
    <rule ref="Lipe.DB" />
    <rule ref="Lipe.Performance" />
    <rule ref="Lipe.PHP" />

    <!-- Test against JS XXS https://vip.wordpress.com/documentation/vip-go/vip-code-review/javascript-security-best-practices/ -->
    <rule ref="Lipe.JS">
        <type>error</type>
    </rule>

    <!-- Requires local "prefixes" -->
    <!-- https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#wordpressnamingconventionsprefixallglobals-prefix-everything-in-the-global-namespace -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.InvalidPrefixPassed" />
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedVariableFound" />
    </rule>
</ruleset>

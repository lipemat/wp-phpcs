<?xml version="1.0"?>
<ruleset name="WP PHPCS - Rules">
    <!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->

    <description>The custom ruleset for the WP PHPCS itself.</description>

    <!-- Show file path based on project root. -->
    <arg name="basepath" value="." />
    <!-- Cache between runs -->
    <arg name="cache" value="./.phpcs.cache" />
    <!-- Sniff both PHP and JS. -->
    <arg name="extensions" value="php/PHP" />
    <!-- Show sniff codes in all reports, and progress when running. -->
    <arg value="sp" />

    <!-- @see https://github.com/PHPCompatibility/PHPCompatibility#using-a-custom-ruleset -->
    <config name="testVersion" value="5.6-" />
    <!-- @see https://github.com/PHPCompatibility/PHPCompatibilityWP#how-to-use -->
    <rule ref="PHPCompatibilityWP" />

    <!-- Include when not specified -->
    <file>./src</file>

    <rule ref="WordPress-Extra">
        <exclude-pattern>*.js</exclude-pattern>
        <exclude name="Generic.Arrays.DisallowShortArraySyntax" />
        <exclude name="WordPress.Files.FileName" />
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid" />
        <exclude name="WordPress.NamingConventions.ValidVariableName" />
        <exclude name="WordPress.PHP.YodaConditions" />
    </rule>

    <rule ref="WordPress-Docs">
        <exclude-pattern>*.js</exclude-pattern>
    </rule>

    <!-- Enforce PSR1 compatible namespaces. -->
    <rule ref="PSR1.Classes.ClassDeclaration" />

    <rule ref="WordPress.Arrays.MultipleStatementAlignment">
        <properties>
            <property name="alignMultilineItems" value="!=100" />
        </properties>
    </rule>

    <rule ref="PSR2.Methods.FunctionClosingBrace" />

    <!-- Disallow long array syntax. -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />

    <!-- Disallow Yoda conditions. -->
    <rule ref="Generic.ControlStructures.DisallowYodaConditions" />

    <!-- Test against JS XXS https://vip.wordpress.com/documentation/vip-go/vip-code-review/javascript-security-best-practices/ -->
    <rule ref="Lipe.JS">
        <type>error</type>
    </rule>
</ruleset>
